{:rename-macros {}, :renames {}, :use-macros {deftest devcards.core, defcard devcards.core}, :excludes #{}, :name clojure-katas.core, :imports nil, :requires {sab sablono.core, sablono.core sablono.core}, :uses nil, :defs {main {:protocol-inline nil, :meta {:file "/home/jhaus/src/clojure-katas/src/clojure_katas/core.cljs", :line 14, :column 7, :end-line 14, :end-column 11, :arglists (quote ([]))}, :name clojure-katas.core/main, :variadic false, :file "/home/jhaus/src/clojure-katas/src/clojure_katas/core.cljs", :end-column 11, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 14, :end-line 14, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros {dc devcards.core, devcards.core devcards.core, sab sablono.core, sablono.core sablono.core}, :cljs.analyzer/constants {:seen #{:path :func :name :documentation :main-obj :initial-data :options :first-card :clojure_katas.core}, :order [:path :func :clojure_katas.core :first-card :name :documentation :main-obj :initial-data :options]}, :doc nil}